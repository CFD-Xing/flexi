stages:
  - build
  - reggie_checkin
  - reggie_nightly
  - deploy


.template: &defaults_gnu
  tags:
    - withmodules-concurrent
  artifacts:
    name: "${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    expire_in: 1 day
    when: on_failure
    paths:
      - build_gnu
  cache:
    key: "${CI_COMMIT_REF_SLUG}-GNU"
    paths:
      - build_gnu
    policy: pull

.template: &defaults_intel
  tags:
    - withmodules-concurrent
  artifacts:
    name: "${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    expire_in: 1 day
    when: on_failure
    paths:
      - build_intel
  cache:
    key: "${CI_COMMIT_REF_SLUG}-INTEL"
    paths:
      - build_intel
    policy: pull


# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "build": Build with intel/gnu on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
build_gnu:
  tags:
    - withmodules-concurrent
  artifacts:
    name: "${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    expire_in: 1 day
    when: on_failure
    paths:
      - build_gnu
  cache:
    key: "${CI_COMMIT_REF_SLUG}-GNU"
    paths:
      - build_gnu
    policy: push
  stage: build
  script:
    - module load env/gnu; mkdir -p build_gnu ; cd build_gnu
    - git clone git@gitlab.iag.uni-stuttgart.de:reggie/reggie.git
    - cmake .. -DFLEXI_BUILD_HDF5=OFF ; make -j all

      #build_intel:
      #  tags:
      #    - withmodules-concurrent
      #  artifacts:
      #    name: "${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
      #    expire_in: 1 day
      #    when: on_failure
      #    paths:
      #      - build_intel
      #  cache:
      #    key: "${CI_COMMIT_REF_SLUG}-INTEL"
      #    paths:
      #      - build_intel
      #    policy: push
      #  stage: build
      #  script:
      #    - module load env/intel; mkdir -p build_intel ; cd build_intel
      #    - git clone git@gitlab.iag.uni-stuttgart.de:reggie/reggie.git
      #    - cmake .. -DFLEXI_BUILD_HDF5=OFF ; make -j all

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_checkin": Run most simple reggie with previous builds on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu:
  <<: *defaults_gnu
  stage: reggie_checkin
  script:
    - module load env/gnu ; cd build_gnu
    - python ./reggie/reggie.py ../regressioncheck/checks/run_basic/freestream_3D -e ./bin/flexi

      #intel:
      #  <<: *defaults_intel
      #  stage: reggie_checkin
      #  script:
      #    - module load env/intel ; cd build_intel
      #    - python ./reggie/reggie.py ../regressioncheck/checks/run_basic/freestream_3D -e ./bin/flexi

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_nightly": Build and run
#                         - build all specified compile options in "run_basic" with BUILD_HDF5=ON
#                         - h-p-convtests
#                      examples on nightly
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_build_all:
  <<: *defaults_gnu
  stage: reggie_nightly
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ./reggie/reggie.py ../regressioncheck/checks/run_basic ; fi

gnu_timediscs:
  <<: *defaults_gnu
  stage: reggie_nightly
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ./reggie/reggie.py ../regressioncheck/checks/timedisc ; fi

gnu_convtest:
  <<: *defaults_gnu
  stage: reggie_nightly
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ;  python ./reggie/reggie.py ../regressioncheck/checks/convtest ; fi 


      #intel_build_all:
      #  <<: *defaults_intel
      #  stage: reggie_nightly
      #  script:
      #    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ./reggie/reggie.py ../regressioncheck/checks/run_basic ; fi
      #
      #intel_timediscs:
      #  <<: *defaults_intel
      #  stage: reggie_nightly
      #  script:
      #    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ./reggie/reggie.py ../regressioncheck/checks/timedisc ; fi
      #
      #intel_convtest:
      #  <<: *defaults_intel
      #  stage: reggie_nightly
      #  script:
      #    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ./reggie/reggie.py ../regressioncheck/checks/convtest ; fi 
 
# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "deploy": 1. Creates doxygen documentation & compiles the documentation creating the *.pdf
#                 2. Copies the doxygen documentation and userguide *.pdf to the homepage server & copies the repository to github 
# ----------------------------------------------------------------------------------------------------------------------------------------------------
documentation:
  stage: deploy
  tags:
    - withmodules-concurrent
  script:
    - cd doc/doxygen ; ./builddoxy.sh
    - if [ -n "${DO_DEPLOY}" ]; then ssh flexi@euler rm -rf homepage/doxygen ; scp -r doxygen flexi@euler:~/homepage/. ; fi
  artifacts:
    name: "${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    expire_in: 1 day
    when: on_failure
    paths:
      - src
      - doc/doxygen

userguide:
  stage: deploy
  tags:
    - withmodules-concurrent
  script:
    - cd doc/userguide ; make; cd ..
    - if [ -n "${DO_DEPLOY}" ]; then scp -r userguide flexi@euler:~/homepage/. ; fi
  artifacts:
    name: "${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    expire_in: 1 day
    when: on_failure
    paths:
      - doc/userguide

github:
  stage: deploy
  tags:
    - withmodules-concurrent
  script:
    - if [ -z "${DO_DEPLOY}" ]; then exit ; fi
    - git clone --single-branch git@gitlab.iag.uni-stuttgart.de:flexi/flexi.git flexi_github ; cd flexi_github ; git push --mirror git@github.com:flexi-framework/flexi.git ; cd ../
